basePath: /
definitions:
  models.Exec:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      inactive_status:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      password_changed_at:
        $ref: '#/definitions/models.NullString'
      password_reset_token:
        $ref: '#/definitions/models.NullString'
      password_token_expires:
        $ref: '#/definitions/models.NullString'
      role:
        type: string
      user_created_at:
        $ref: '#/definitions/models.NullString'
      username:
        type: string
    type: object
  models.NullString:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
  models.Student:
    properties:
      class:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
    type: object
  models.Teacher:
    properties:
      class:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      subject:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: REST API for managing school data.
  title: School Management API
  version: "1.0"
paths:
  /execs:
    get:
      consumes:
      - application/json
      description: Get a list of execs with optional filtering and sorting.
      parameters:
      - description: Filter by first name (optional)
        in: query
        name: first_name
        type: string
      - description: Filter by last name (optional)
        in: query
        name: last_name
        type: string
      - description: Filter by email (optional)
        in: query
        name: email
        type: string
      - description: Filter by role (optional)
        in: query
        name: role
        type: string
      - description: Sorting (e.g., first_name:asc, role:desc) (optional)
        in: query
        name: sortby
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of execs with metadata
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Retrieve all execs
      tags:
      - execs
    patch:
      consumes:
      - application/json
      description: Apply partial updates to multiple execs
      parameters:
      - description: List of updates with exec IDs
        in: body
        name: updates
        required: true
        schema:
          items:
            additionalProperties: true
            type: object
          type: array
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Partially update multiple execs
      tags:
      - execs
    post:
      consumes:
      - application/json
      description: Add one or more execs
      parameters:
      - description: List of execs
        in: body
        name: execs
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Exec'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Add new execs
      tags:
      - execs
  /execs/{id}:
    delete:
      description: Delete an exec by ID
      parameters:
      - description: Exec ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid Exec ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete one exec
      tags:
      - execs
    get:
      description: Retrieve details of an exec by ID
      parameters:
      - description: Exec ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Exec'
        "400":
          description: Invalid Exec ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get one exec
      tags:
      - execs
    patch:
      consumes:
      - application/json
      description: Apply partial updates to a single exec by ID
      parameters:
      - description: Exec ID
        in: path
        name: id
        required: true
        type: integer
      - description: Partial updates
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Exec'
        "400":
          description: Invalid request payload or ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Partially update one exec
      tags:
      - execs
  /execs/login:
    post:
      consumes:
      - application/json
      description: Authenticates an exec user using username and password and returns
        a JWT token.
      parameters:
      - description: Login Credentials (username and password required)
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.Exec'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token in response body and also set as HttpOnly cookie
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body or missing username/password
          schema:
            type: string
        "403":
          description: Account inactive or password incorrect
          schema:
            type: string
        "500":
          description: Could not create login token
          schema:
            type: string
      summary: User Login
      tags:
      - auth
  /students:
    delete:
      consumes:
      - application/json
      description: Delete multiple students by their IDs
      parameters:
      - description: List of student IDs
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete multiple students
      tags:
      - students
    get:
      consumes:
      - application/json
      description: Get a list of students with optional filtering and sorting.
      parameters:
      - description: Filter by first name (optional)
        in: query
        name: first_name
        type: string
      - description: Filter by last name (optional)
        in: query
        name: last_name
        type: string
      - description: Filter by email (optional)
        in: query
        name: email
        type: string
      - description: Filter by class (optional)
        in: query
        name: class
        type: string
      - description: Sorting (e.g., first_name:asc, class:desc) (optional)
        in: query
        name: sortby
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of students with metadata
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Retrieve all students
      tags:
      - students
    patch:
      consumes:
      - application/json
      description: Apply partial updates to multiple students
      parameters:
      - description: List of updates
        in: body
        name: updates
        required: true
        schema:
          items:
            additionalProperties: true
            type: object
          type: array
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Partially update multiple students
      tags:
      - students
    post:
      consumes:
      - application/json
      description: Add one or more students
      parameters:
      - description: List of students
        in: body
        name: students
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Student'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Add new students
      tags:
      - students
  /students/{id}:
    delete:
      description: Delete a student by ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid Student ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete one student
      tags:
      - students
    get:
      description: Retrieve details of a student by ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Invalid Student ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get one student
      tags:
      - students
    patch:
      consumes:
      - application/json
      description: Apply partial updates to a single student by ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      - description: Partial updates
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Invalid request payload or ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Partially update one student
      tags:
      - students
    put:
      consumes:
      - application/json
      description: Update an existing student by ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Invalid request payload or ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a student
      tags:
      - students
  /teachers:
    delete:
      consumes:
      - application/json
      description: Delete multiple teachers by their IDs
      parameters:
      - description: List of teacher IDs
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete multiple teachers
      tags:
      - teachers
    get:
      consumes:
      - application/json
      description: Get a list of teachers with optional filtering and sorting.
      parameters:
      - description: Filter by first name (optional)
        in: query
        name: first_name
        type: string
      - description: Filter by last name (optional)
        in: query
        name: last_name
        type: string
      - description: Filter by email (optional)
        in: query
        name: email
        type: string
      - description: Filter by class (optional)
        in: query
        name: class
        type: string
      - description: Filter by subject (optional)
        in: query
        name: subject
        type: string
      - description: Sorting (e.g., first_name:asc, class:desc) (optional)
        in: query
        name: sortby
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of teachers with metadata
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Retrieve all teachers
      tags:
      - teachers
    patch:
      consumes:
      - application/json
      description: Apply partial updates to multiple teachers
      parameters:
      - description: List of updates
        in: body
        name: updates
        required: true
        schema:
          items:
            additionalProperties: true
            type: object
          type: array
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Partially update multiple teachers
      tags:
      - teachers
    post:
      consumes:
      - application/json
      description: Add one or more teachers
      parameters:
      - description: List of teachers
        in: body
        name: teachers
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Teacher'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Add new teachers
      tags:
      - teachers
  /teachers/{id}:
    delete:
      description: Delete a teacher by ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid Teacher ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete one teacher
      tags:
      - teachers
    get:
      description: Retrieve details of a teacher by ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Teacher'
        "400":
          description: Invalid Teacher ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get one teacher
      tags:
      - teachers
    patch:
      consumes:
      - application/json
      description: Apply partial updates to a single teacher by ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Partial updates
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Teacher'
        "400":
          description: Invalid request payload or ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Partially update one teacher
      tags:
      - teachers
    put:
      consumes:
      - application/json
      description: Update an existing teacher by ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Teacher'
        "400":
          description: Invalid request payload or ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a teacher
      tags:
      - teachers
  /teachers/{id}/studentcount:
    get:
      consumes:
      - application/json
      description: Get the total number of students assigned to a specific teacher.
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Student count
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid Teacher ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Retrieve student count by teacher ID
      tags:
      - teachers
  /teachers/{id}/students:
    get:
      consumes:
      - application/json
      description: Get all students assigned to a specific teacher.
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of students with metadata
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid Teacher ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Retrieve students by teacher ID
      tags:
      - teachers
schemes:
- https
swagger: "2.0"
